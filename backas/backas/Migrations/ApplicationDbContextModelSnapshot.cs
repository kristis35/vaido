// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backas;

#nullable disable

namespace backas.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("backas.Fakultetas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TrumpasPavadinimas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UniversitetasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversitetasId");

                    b.ToTable("Fakultetai");
                });

            modelBuilder.Entity("backas.Grupe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApmokejimoStadija")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BaigimoMetai")
                        .HasColumnType("int");

                    b.Property<bool>("BalsavimasMaketai")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("FakultetasId")
                        .HasColumnType("int");

                    b.Property<string>("FotografavimoDataVieta")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("GamybosStadija")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GrupesSeniunas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IlgasPavadinimas")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("PasleptiGrupe")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Pastabos")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("PatvirtintasSarasas")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("StudentuSkaicius")
                        .HasColumnType("int");

                    b.Property<decimal>("SumoketasAvansas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UniversitetasId")
                        .HasColumnType("int");

                    b.Property<int>("ĮstojimoMetai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FakultetasId");

                    b.HasIndex("UniversitetasId");

                    b.ToTable("Grupes");
                });

            modelBuilder.Entity("backas.Universitetas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TrumpasPavadinimas")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Universitetai");
                });

            modelBuilder.Entity("backas.Vartotojai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FakultetasId")
                        .HasColumnType("int");

                    b.Property<int?>("GrupeId")
                        .HasColumnType("int");

                    b.Property<string>("Pavarde")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PrisijungimoVardas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Slaptazodis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telefonas")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UniversitetasId")
                        .HasColumnType("int");

                    b.Property<string>("Vardas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("VartotojoRole")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("FakultetasId");

                    b.HasIndex("GrupeId");

                    b.HasIndex("UniversitetasId");

                    b.ToTable("Vartotojai");
                });

            modelBuilder.Entity("backas.Fakultetas", b =>
                {
                    b.HasOne("backas.Universitetas", "Universitetas")
                        .WithMany("Fakultetai")
                        .HasForeignKey("UniversitetasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universitetas");
                });

            modelBuilder.Entity("backas.Grupe", b =>
                {
                    b.HasOne("backas.Fakultetas", "Fakultetas")
                        .WithMany("Grupes")
                        .HasForeignKey("FakultetasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backas.Universitetas", "Universitetas")
                        .WithMany("Grupes")
                        .HasForeignKey("UniversitetasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fakultetas");

                    b.Navigation("Universitetas");
                });

            modelBuilder.Entity("backas.Vartotojai", b =>
                {
                    b.HasOne("backas.Fakultetas", "Fakultetas")
                        .WithMany("Vartotojai")
                        .HasForeignKey("FakultetasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backas.Grupe", "Grupe")
                        .WithMany("Vartotojai")
                        .HasForeignKey("GrupeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("backas.Universitetas", "Universitetas")
                        .WithMany("Vartotojai")
                        .HasForeignKey("UniversitetasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Fakultetas");

                    b.Navigation("Grupe");

                    b.Navigation("Universitetas");
                });

            modelBuilder.Entity("backas.Fakultetas", b =>
                {
                    b.Navigation("Grupes");

                    b.Navigation("Vartotojai");
                });

            modelBuilder.Entity("backas.Grupe", b =>
                {
                    b.Navigation("Vartotojai");
                });

            modelBuilder.Entity("backas.Universitetas", b =>
                {
                    b.Navigation("Fakultetai");

                    b.Navigation("Grupes");

                    b.Navigation("Vartotojai");
                });
#pragma warning restore 612, 618
        }
    }
}
